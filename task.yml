AWSTemplateFormatVersion: '2010-09-09'
Description: A VPC stack to run Fargate Tasks in.

"Parameters" :
  "Bucket" :
    "Type" : "String"
    "Description" : "The bucket to write ."
  "CidrVpc" :
    "Type" : "String"
    "Default" : "10.0.0.0/16"
    "Description" : "The VPC CIDR block."
  "CidrSubnet1" :
    "Type" : "String"
    "Default" : "10.0.0.0/24"
    "Description" : "The Subnet 1 CIDR block."
  "CidrSubnet2" :
    "Type" : "String"
    "Default" : "10.0.1.0/24"
    "Description" : "The Subnet 2 CIDR block."

Resources:

  # VPC Resources
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref CidrVpc

  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref CidrSubnet1
      MapPublicIpOnLaunch: true

  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 1
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref CidrSubnet2
      MapPublicIpOnLaunch: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'InternetGateway'
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateway'

  # ECS Resources
  ECSCluster:
    Type: AWS::ECS::Cluster

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the Fargate containers
      VpcId: !Ref 'VPC'

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Policies:
      - PolicyName: Task
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: 's3:PutObject'
            Resource: !Sub
              - 'arn:aws:s3:::${B}/*'
              - B: !Ref Bucket

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: ExecTask
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action: 'logs:CreateLogGroup'
              Resource: 'arn:aws:logs:::log-group:/ecs/*"'

Outputs:
  ClusterName:
    Description: The name of the ECS cluster
    Value: !Ref 'ECSCluster'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ClusterName' ] ]
  TaskRole:
    Description: The ARN of the Task role
    Value: !GetAtt 'TaskRole.Arn'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'TaskRole' ] ]
  TaskExecutionRole:
    Description: The ARN of the Task Execution role
    Value: !GetAtt 'TaskExecutionRole.Arn'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'TaskExecutionRole' ] ]
  VPCId:
    Description: The ID of the VPC that this stack is deployed in
    Value: !Ref 'VPC'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'VPCId' ] ]
  PublicSubnetOne:
    Description: Public subnet one
    Value: !Ref 'PublicSubnetOne'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'PublicSubnetOne' ] ]
  PublicSubnetTwo:
    Description: Public subnet two
    Value: !Ref 'PublicSubnetTwo'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'PublicSubnetTwo' ] ]
  SecurityGroup:
    Description: A security group used to allow Fargate containers to receive traffic
    Value: !Ref 'SecurityGroup'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'SecurityGroup' ] ]
